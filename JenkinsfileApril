pipeline
{
    agent any
    tools{  
        maven "maven 3.9.0"
    }
    triggers {
    pollSCM ('* * * * *')
    }
    options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
        timestamps()
    }
    stages{
        stage('Git/CheckOutCode')
        {
            steps {
                sendSlackNotifications('STARTED')
            git branch: 'development', changelog: false, credentialsId: 'bbf196b3-da17-4dd6-8ff9-514a293c7515', poll: false, url: 'https://github.com/SAMBAGMG/maven-web-application.git'
            }
        }
        stage('Build/Maven')
        {
            steps {
                sh "mvn clean package"
            }
        }
        stage('SoanrQube/CodeQuality')
        {
            steps{
                sh "mvn sonar:sonar"
            }
        }
        stage('Neuxs/Artifactory')
        {
            steps{
                sh "mvn deploy"
            }
        }
        stage('Tomcat/ApplicationServer')
        {
            steps{
                sshagent(['841873b8-2d49-4a6f-8147-ae3b730073fb']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@18.208.231.253:/opt/apache-tomcat-9.0.73/webapps/"
            }
        }
        }
    }
    post {
  success {
      sendSlackNotifications('SUCCESS')
  }
  failure {
      sendSlackNotifications('FAILURE')
  }
}

}
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}
